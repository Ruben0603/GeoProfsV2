@page
@model IndexModel
<!DOCTYPE html>
<html lang="nl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Welkom</title>
</head>
<body>

    <h1>Welkom</h1>

    <div id="userInfo" style="display: none;">
        Welkom, <span id="userEmail"></span>! Je rol is: <span id="userRole"></span>
        <br>
        <button id="logoutButton">Uitloggen</button>
    </div>

    <h2>Inloggen</h2>
    <form id="loginForm">
        <label for="loginEmail">E-mail:</label>
        <input type="email" id="loginEmail" name="loginEmail" required><br>

        <label for="loginPassword">Wachtwoord:</label>
        <input type="password" id="loginPassword" name="loginPassword" required><br>

        <button type="submit">Inloggen</button>
    </form>

    <table id="userTable" style="display: none;">
        <thead>
            <tr>
                <th>Gebruiker ID</th>
                <th>E-mail</th>
                <th>Rol</th>
                <th>Verander rol</th>
            </tr>
        </thead>
        <tbody id="userTableBody"></tbody>
    </table>

    <script src="https://www.gstatic.com/firebasejs/9.0.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.0.0/firebase-auth-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.0.0/firebase-firestore-compat.js"></script>

    <script>
        // For Firebase JS SDK v7.20.0 and later, measurementId is optional
        const firebaseConfig = {
            apiKey: "AIzaSyCCzNwDI9iTiTEc0QTN0XU39RxqWR9XYm4",
            authDomain: "geoprofs-1b3fb.firebaseapp.com",
            projectId: "geoprofs-1b3fb",
            storageBucket: "geoprofs-1b3fb.appspot.com",
            messagingSenderId: "141244233397",
            appId: "1:141244233397:web:9e2ce2844d4ca7160e70fc",
            measurementId: "G-SZ15Q61C7Q"
        };

        firebase.initializeApp(firebaseConfig);

        const firestore = firebase.firestore();
        let user;

        // Functie om de gebruiker in te loggen
        function login(email, password) {
            firebase.auth().signInWithEmailAndPassword(email, password)
                .then((userCredential) => {
                    user = userCredential.user;
                    checkUserRole();
                })
                .catch((error) => {
                    const errorCode = error.code;
                    const errorMessage = error.message;
                    alert('Fout bij inloggen: ' + errorMessage);
                });
        }

        // Functie om de gebruiker uit te loggen
        function logout() {
            firebase.auth().signOut()
                .then(() => {
                    window.location.reload();
                })
                .catch((error) => {
                    console.error('Fout bij uitloggen:', error);
                });
        }

        // Functie om de rol van de gebruiker te controleren
        function checkUserRole() {
            firestore.collection('users').doc(user.uid).get()
                .then((doc) => {
                    if (doc.exists) {
                        const userData = doc.data();
                        const userRole = userData.role || 'Onbekend';
                        const userEmail = user.email;

                        // Sla gebruikersinformatie op in sessionStorage
                        sessionStorage.setItem('userEmail', userEmail);
                        sessionStorage.setItem('userRole', userRole);

                        displayUserInfo();
                    } else {
                        console.error('Gebruiker niet gevonden.');
                    }
                })
                .catch((error) => {
                    console.error('Fout bij ophalen gebruikersgegevens:', error);
                });
        }

        // Functie om de gebruikersinformatie weer te geven
        function displayUserInfo() {
            const userInfoDiv = document.getElementById('userInfo');
            const userEmailElement = document.getElementById('userEmail');
            const userRoleElement = document.getElementById('userRole');

            const userEmail = sessionStorage.getItem('userEmail');
            const userRole = sessionStorage.getItem('userRole');

            userEmailElement.textContent = userEmail;
            userRoleElement.textContent = userRole;
            userInfoDiv.style.display = 'block';
        }

        // Eventlistener voor het inlogformulier
        const loginForm = document.getElementById('loginForm');
        loginForm.addEventListener('submit', (e) => {
            e.preventDefault();
            const email = loginForm.loginEmail.value;
            const password = loginForm.loginPassword.value;
            login(email, password);
        });

        // Eventlistener voor de uitlogknop
        const logoutButton = document.getElementById('logoutButton');
        logoutButton.addEventListener('click', logout);
    </script>

</body>
</html>











